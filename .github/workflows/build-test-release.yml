name: Build → Tests → Staging → Production

on:
  workflow_dispatch: {}
  push:
    branches: [ master ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Install
        run: |
          if [ -f package.json ]; then
            npm ci || npm install
          fi
      - name: Build
        run: |
          if [ -f package.json ]; then
            npm run build || echo "no build step"
          else
            echo "no package.json, skipping build"
          fi
          zip -r build.zip . -x ".git/*"
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.zip

  test-unit:
    runs-on: ubuntu-latest
    needs: build
    env:
      TEST_ENV: staging
    steps:
      - uses: actions/download-artifact@v4
        with: { name: build }
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Run unit tests
        run: |
          if [ -f package.json ]; then
            npm ci || npm install
            npm run test:unit
          else
            echo "No package.json, mock unit passed"
          fi

  test-integration:
    runs-on: ubuntu-latest
    needs: test-unit
    env:
      TEST_ENV: staging
    steps:
      - uses: actions/download-artifact@v4
        with: { name: build }
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Run integration tests
        run: |
          if [ -f package.json ]; then
            npm ci || npm install
            npm run test:integration
          else
            echo "No package.json, mock integration passed"
          fi

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test-integration
    environment: staging
    steps:
      - uses: actions/download-artifact@v4
        with: { name: build }
      - name: Release to Staging
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ vars.BUILD_TAG || format('staging-{0}', github.run_number) }}
          name: ${{ vars.BUILD_TAG || format('staging-{0}', github.run_number) }}
          body: ${{ vars.RELEASE_NOTE || 'Testing pre-production release' }}
          files: build.zip
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: production   # ← requires approval
    steps:
      - uses: actions/download-artifact@v4
        with: { name: build }
      - name: Release to Production
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ vars.BUILD_TAG || format('prod-{0}', github.run_number) }}
          name: ${{ vars.BUILD_TAG || format('prod-{0}', github.run_number) }}
          body: ${{ vars.RELEASE_NOTE || 'Production release' }}
          files: build.zip
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
